<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAfQAAAH0CAYAAADL1t+KAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnMAABJzAYwiuQcAACkkSURBVHhe7d0HeFNV48dxaQstS1YLlE3Ze+8hOFBQ2cgQ
        ZEsZ/gVxor6+KiCiuNiviymIDJmibDc42BtKkdFiKaWlLWlG8z8nPYG0XEppk9wk/X58fm1Jbu45uT5P
        fr23N7n3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAGkGP/lke5GHhgx88mHxvYvKoyKPiTwu0lWkm0p3F6TH7fLUgAE9Bvbr17Vv716duz36
        aIcHO9zXtEWTJtVrVa9WqnRIcIB6CgAA5G5tWrUKTbWkmlNTU62eHsnxu8ViMV9LSIg/ExFx6qcff9z5
        1ZKlC6ZNfeeN4UOG9m3ZtHntEkWK5lFPEwAA39amVctKotAtjsXpK7l+/br5wP79R5YsWrRwwrPjxzRt
        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
        eJ8QVqFiqU/nzf/of3PnzRSR28NxGzjG8Xb5sz322+zby3G72ZYV650l8vH/5s17/5OPPp6khgYAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADu0j33/D8e
        lP67LwJZpwAAAABJRU5ErkJggg==
</value>
  </data>
</root>